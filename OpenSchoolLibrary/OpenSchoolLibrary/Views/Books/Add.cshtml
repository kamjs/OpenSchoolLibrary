@model OpenSchoolLibrary.Models.BooksViewModels.AddBookViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Add</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Book</h4>
        <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="control-label col-md-2">
                    <label>Title:</label>
                </div>
                <div class="col-md-10">
                    <input type="text" name="Title" class="form-control" required placeholder="Title is Required.">
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2">
                    <label>Subtitle:</label>
                </div>
                <div class="col-md-10">
                    <input type="text" name="SubTitle" class="form-control">
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2">
                    <label>Author:</label>
                </div>
                <div class="col-md-10">
                    <input type="text" name="Author" class="form-control" required placeholder="Author is Required.">
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ISBN13, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ISBN13, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ISBN13, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Condition", EnumHelper.GetSelectList(typeof(OpenSchoolLibrary.Controllers.BooksController.BookConditions)), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Condition, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2">
                    <label>Catalog ID:</label>
                </div>
                <div class="col-md-10">
                    <input type="text" name="CatalogID" class="form-control">
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Genre", Model.GenreList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GenreList, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
