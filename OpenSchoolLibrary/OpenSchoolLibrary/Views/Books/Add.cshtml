@model OpenSchoolLibrary.Models.BooksViewModels.AddBookViewModel

@{
    ViewBag.Title = "Add a Book";
}

<h2>@ViewBag.Title</h2>

<script type="text/javascript">textContent
    function ISBNorISBN13() {      
        var isbn = document.querySelector("input[name=ISBN]");
        var isbn13 = document.querySelector("input[name=ISBN13]");
        var pattern = new RegExp("(?:(?=.{17}$)97[89][ -](?:[0-9]+[ -]){2}[0-9]+[ -][0-9]|97[89][0-9]{10}|(?=.{13}$)(?:[0-9]+[ -]){2}[0-9]+[ -][0-9Xx]|[0-9]{9}[0-9Xx])");


        document.getElementById("ISBNError").textContent = "";
        document.getElementById("ISBN13Error").textContent = "";


        if (!isbn.value && !isbn13.value) {
            document.getElementById("ISBNError").textContent = "ISBN and ISBN 13 can not both be blank.";
            document.getElementById("ISBN13Error").textContent = "ISBN and ISBN 13 can not both be blank.";
            isbn.focus();

            return false;
        }

        if (isbn.value == isbn13.value) {
            document.getElementById("ISBNError").textContent = "ISBN and ISBN 13 can not be the same.";
            document.getElementById("ISBN13Error").textContent = "ISBN and ISBN 13 can not be the same.";
            isbn.focus();

            return false;
        }

        if (!pattern.test(isbn.value)) {
            document.getElementById("ISBNError").textContent = "ISBN not valid.";
            isbn.focus();

            return false;
        }

        return true;
    }
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
            <div class="form-group">
                <div class="control-label col-md-2">
                    <label>Title:</label>
                </div>
                <div class="col-md-10">
                    <input type="text" name="Title" class="form-control" required placeholder="Title is Required.">
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2">
                    <label>Subtitle:</label>
                </div>
                <div class="col-md-10">
                    <input type="text" name="SubTitle" class="form-control">
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2">
                    <label>Author:</label>
                </div>
                <div class="col-md-10">
                    <input type="text" name="Author" class="form-control" required placeholder="Author is Required.">
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2">
                    <label>ISBN:</label>
                </div>
                <div class="col-md-10">
                    <input type="number" name="ISBN" class="form-control">
                    <div id="ISBNError" class="text-danger"></div>
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2">
                    <label>ISBN 13:</label>
                </div>
                <div class="col-md-10">
                    <input type="number" name="ISBN13" class="form-control">
                    <div id="ISBN13Error" class="text-danger"></div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Condition", EnumHelper.GetSelectList(typeof(OpenSchoolLibrary.Controllers.BooksController.BookConditions)), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Condition, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2">
                    <label>Catalog ID:</label>
                </div>
                <div class="col-md-10">
                    <input type="text" name="CatalogID" class="form-control">
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Genre", Model.GenreList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GenreList, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" onclick="return ISBNorISBN13()" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
